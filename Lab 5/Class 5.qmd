---
title: "Class 5: Data Vis with ggplot"
author: "Trevor (PID: A16371830)"
format: html
---

## Intro to ggplot

**Background Questions**
> Q For which phases is data visualization important in our scientific workflows?
All of the above

> Q True or False? The ggplot2 package comes already installed with R?
False

**GGPlot**

There are many graphic systems in R (ways to make plots and figures). These include "base" R plots. Today we will focus mostly on the **ggplot2** package.

Let's start with a plot of a simple in-built dataset called `cars`.

```{r}
cars
```

```{r}
plot(cars)
```

Let's see how we can make this figure using **ggplot**. First I need to install this package on my computer. To install any R package I use the function `install.pacakges()`. 

> I will run `install.packages("ggplot2") in my R console not this quarto document.

Before I can use any functions from add on packages I need to load the package from my "library()" wit the `library(ggplot2)` call.

```{r}
library(ggplot2)
ggplot(cars)
```

All ggplot figures have at least 3 things (called layers). These include: 

- **data** (the input dataset I want to plot from)
- **aes** (the aesthetic mapping of the data to my plot)
- **geoms** (the geom_point(), geom_line(), wtc. that I want to draw)

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```

Let's add a line to show the relationship here:
```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm") +
  theme_bw() +
  labs(title = "My First GGPLOT")

```

> Q1 Which geometric layer should be used to create scatter plots in ggplot2?
geom_point()

##Gene Expression Figure

The code to read the dataset 

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q1 How many genes are in this dataset?

```{r}
nrow(genes)
```

> Q2 Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?

```{r}
colnames(genes)
```

> Q3  Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer

```{r}
table(genes$State)
```
> Q4 Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?

```{r}
round(table(genes$State)/nrow(genes), 4)
```


A first plot of this dataset

```{r}
p = ggplot(genes) +
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point() +
  scale_colour_manual(values=c("blue","gray", "red"))+
  theme_bw() +
  labs(title="Gene expression changes using drug treatment",
       x="Control Expression (No Drug)",
       y="Drug Pressence Expression")
p
```

```{r}
p + theme_minimal()
```

## Gapminder Dataset

Unloading gapminder dataset after installing packages and checking columns.

```{r}
library(gapminder)
colnames(gapminder)
head(gapminder)
library(dplyr)
gapminder_2007 = gapminder %>% filter(year==2007)
```

Making preliminary plot

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```

Coloring the points by the numeric variablle population pop.

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=pop) +
  geom_point(alpha=0.8)
```

Adjusting point size

```{r}
ggplot(gapminder_2007) +
 geom_point(aes(x=gdpPercap, y=lifeExp, size=pop), alpha=0.5) +
  scale_size_area(max_size=10)
```

