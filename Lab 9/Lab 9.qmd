---
title: "Lab 9- Halloween Candy Mini Project"
author: "Trevor Hoang (A16371830)"
format: pdf
toc: true
---

Today we will examine data from 538 on common Halloween candy. In particular we will use ggplot, dplyr and PCA to make sense of this multivariate dataset. 

## Importing Candy Data

```{r}
candy = read.csv("candy-data.csv", row.names=1)

head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

>Q2. How many fruity candy types are in the dataset? 

```{r}
sum(candy$fruity)
```

> How many chocolate chandy are there in this dataset?

```{r}
sum(candy$chocolate)
```


## Favorite Candy

Finding the favorite candy by percentage using the winpercent statistic

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Nerds", "winpercent"]
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", "winpercent"]
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", "winpercent"]
```

Using skimr 

```{r}
library(skimr)
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?
It looks like the `winpercent` column is on a different scale that the others (0-100% rather than 0-1). I will need to scale this dataset before analysis like PCA

> Q7. What do you think a zero and one represent for the candy$chocolate column?
I think that a 1 represents the candy being considered a chocolate while a 0 means that it is not considered a chocolate.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)

ggplot(candy)+
  aes(winpercent)+
  geom_histogram(bins=10, fill="lightblue")
```


> Q9. Is the distribution of winpercent values symmetrical?
No it looks like the histogram is skewed left

> Q10. Is the center of the distribution above or below 50%? 
The center of the distribution is slightly below 50%

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- Step 1: Find all "chocolate" candy
- Step 2: Find their "winpercent" values
- Step 3: Summarize these values

- Step 4: Find all "Fruity" candy
- Step 5: FInd their "winpercent" values
- Step 6: Summarize thee values

- Step 7: Compare the 2 summary values

Step 1: Find all chocolate candy
```{r}
choc.inds = candy$chocolate == 1
```

Step 2: Find their winpercent values
```{r}
choc.win = candy[choc.inds,]$winpercent
```

Step 3: Summarize these values
```{r}
choc.mean = mean(choc.win)
```

Step 4: Find all "Fruity" candy
```{r}
fruity.inds = candy$fruity == 1
```

Step 5: FInd their "winpercent" values
```{r}
fruity.wins = candy[fruity.inds,]$winpercent
```


Step 6: Summarize thee values
```{r}
fruit.mean = mean(fruity.wins)
```

Step 7: Compare the 2 summary values
Chocolate has the higher mean

```{r}
choc.mean
fruit.mean
```


> Q12. Is this difference statistically significant?

```{r}
t.test(choc.win, fruity.wins)
```

## Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

```{r}
#Sort is not that useful - it just sorts values
sort(candy$winpercent)
```

```{r}
x = c(10, 1, 100)
order(x)
```

```{r}
x[order(x)]
```

The `order()` function tells us how to arrange the elements of the input to make them sortable - i.e. how to order them

We can determine the order to winpercent to make them sorted and use that order to arrange the whole dataset.

```{r}
ord.inds = order(candy$winpercent)
head(candy[ord.inds,]) 
```


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[ord.inds,]) 
```

```{r}
ord.inds = order(candy$winpercent, decreasing =T)
head(candy[ord.inds,]) 
```


> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

Let's rearrange these
```{r}
ggplot(candy) +
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

## Time to add some color

```{r}
ggplot(candy) +
  aes(winpercent, reorder(rownames(candy), winpercent), fill=chocolate) +
  geom_col()
```

Need to make our own separate color vector where we can spell out exactly what candy is colored a particular color.

```{r}
mycols = rep("gray", nrow(candy))
mycols[candy$chocolate == 1] = "chocolate"
mycols[candy$bar == 1] = "brown"
mycols[candy$fruity == 1] = "blue"
mycols
```

```{r}
ggplot(candy) +
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill=mycols)
```

> Q17. What is the worst ranked chocolate candy?
The worst ranked chocolate candy is sixlet

> Q18. What is the best ranked fruity candy?
The best ranked fruity candy is starburts


## Taking a look at price percent

Make a plot of winpercent (x-axis) vs pricepercent (y-axis)

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) +
  geom_text()
```

To avoid the overplotting of the text labels we can use the add on package **ggrepel**

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) +
  geom_text_repel(max.overlaps=10) +
  theme_bw()
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?
The highest ranked candy with for the least money is reese's miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord.inds = order(candy$pricepercent, decreasing =T)
head(candy[ord.inds,]) 
```
Nik L Nip is the least popular

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

## Exploring the correlation structure

Now that we have explored the dataset a little, we will see how the variables interact with one another.

First we will use correlation and view the results with the **corrplot** package to plot a correlation matrix

```{r}
cij = cor(candy)
cij
```


```{r}
library(corrplot)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?
Chocolate and fruit are anti-correlated

> Q23. Similarly, what two variables are most positively correlated?
Chocolate and bar are positively correlated


## Principal Component Analysis

Let’s apply PCA using the `prcom()` function to our candy dataset remembering to set the **scale=TRUE** argument.

```{r}
pca = prcomp(candy, scale=T)

summary(pca)
```

```{r}
attributes(pca)
```

Let's plot our main results as our PCA "score plot"

```{r}
ggplot(pca$x) +
  aes(PC1, PC2, label=rownames(pca$x)) +
  geom_point(col=mycols) +
  geom_text_repel(col=mycols)
```

Finally let's look athow the original variables contribute to the PC's, start with PC1

```{r}
ggplot(pca$rotation) +
  aes(PC1, reorder(rownames(pca$rotation),PC1))+ 
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?
Fruitym pluribus and hard were strongly in the positive direction. This makes sense because they are generally correlated with one another.




