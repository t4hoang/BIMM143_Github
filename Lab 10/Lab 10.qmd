---
title: "Lab 10: PDB"
author: "Trevor Hoang (A16371830)"
format: pdf
toc: TRUE
---

## 1. PDB

Today we will be exploring the PDB data base found at: http://www.rcsb.org/ 

I accessed my data using"Analyze” > “PDB Statistics” > “by Experimental Method and Molecular Type”


> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbstats = read.csv("Data Export Summary.csv")
pdbstats$X.ray
```

The comma in these numbers is causing them to be read as character rather than numeric

I can fix this by "," for nothing with "" with the `sub()` function
```{r}
x = pdbstats$X.ray
sum(as.numeric(sub(",","",x)))
```

Or I an use the **readr** package and the `read_csv()` function.

```{r}
library(readr)

pdbstats = read_csv("Data Export Summary.csv")

pdbstats

```

I want to clean the column names so that they are all lower case and don't have spaces in them

```{r}
colnames(pdbstats)
```

```{r}
library(janitor)

df = clean_names(pdbstats)
df
```

Total number of X-ray
```{r}
sum(df$x_ray)
```

Total number os structures
```{r}
sum(df$total)
```

> Q2: What proportion of structures in the PDB are protein? 

```{r}
per = sum(df$x_ray)/sum(df$total)*100

per
```

Percent of EM structures

```{r}
per = sum(df$em)/sum(df$total)*100

per
```

## 2. Using Mol*

The main Mol* homepage at: https://molstar.org//viewer/ 
We can input our own PDB files or just gie it a PDB database accession code (4 letter PDB code)

![Molecular view of 1HSG](1HSG.png)

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

![Water 308 in binding site](Water molecule.png)

![Molecular surface view of binding cavity](Binding cavity.png)

![The important Asp used in binding](ASP.png)

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?
We see one atom per water molecule because they would create a big block otherwise due to how they interact with the protein.

## 3. Introduction to Bio3D in R

We can use the **bio3d** package for structural bioinformatics to read PDB data into R

```{r}
library(bio3d)

pdb = read.pdb("1hsg")

pdb
```


> Q7: How many amino acid residues are there in this pdb object? 

```{r}
length(pdbseq(pdb))
```

> Q8: Name one of the two non-protein residues? 
HOH

> Q9: How many protein chains are in this structure? 
There are 2 chains A and B


Looking at the `pdb` object in more detail 

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

Let's try a new funciton not yet in the bio3d package. It requires the **r3dmol** package that we nee ot install with `install.packages("r3dmol")` and `install.packages("shiny")`.

```{r}
source("https://tinyurl.com/viewpdb")
#view.pdb(pdb, backgroundColor="pink")
```

## 4. Predicting Functional Dynamics

We can use the `nma()` function in bio3d to predict the large-scale functional motions of biomolecules. 

```{r}
adk <- read.pdb("6s36")

adk
```

```{r}
m = nma(adk)
plot(m)
```

Write out a trajectory of the predicted molecular motion:
```{r}
mktrj(m, file="adk_m7.pdb")
```




